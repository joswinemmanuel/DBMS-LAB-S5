--QUESTION 1
CREATE TABLE bank_details(
accno INT,
NAME VARCHAR(25),
balance INT,
adate date
);

CREATE TABLE new_bank(
accno INT,
interest INT
);

INSERT INTO bank_details(accno,NAME,balance,adate)VALUES(1,'robert',5600,'03-07-2015');
INSERT INTO bank_details(accno,NAME,balance,adate)VALUES(2,'dony',54600,'02-09-2014');
INSERT INTO bank_details(accno,NAME,balance,adate)VALUES(3,'xavier',13600,'02-12-2019');
INSERT INTO bank_details(accno,NAME,balance,adate)VALUES(4,'mark',9600,'19-01-2019');


DECLARE
v_accno bank_details.accno%TYPE;
v_balance bank_details.balance%TYPE;
v_interest int;    
CURSOR c_bank_details IS
SELECT accno, balance
FROM bank_details;
BEGIN
OPEN c_bank_details;
LOOP
FETCH c_bank_details INTO v_accno, v_balance;
EXIT WHEN c_bank_details%NOTFOUND;
v_interest := 0.08 * v_balance;
INSERT INTO new_bank VALUES (v_accno, v_interest);
END LOOP;
CLOSE c_bank_details;
END;


select * from new_bank;

--QUESTION 2
CREATE TABLE new_student(
ID INT PRIMARY KEY,
NAME VARCHAR(50),
m1 INT,
m2 INT,
m3 INT,
grade varchar(10)
);

INSERT INTO new_student VALUES (1, 'jake', 90, 85, 92, 'A');
INSERT INTO new_student VALUES (2, 'John', 78, 88, 95, 'B');
INSERT INTO new_student VALUES (3, 'Boby', 85, 92, 89, 'A');
INSERT INTO new_student VALUES (4, 'edwin', 92, 78, 87, 'B');
INSERT INTO new_student VALUES (5, 'Charlie', 88, 90, 94, 'A');

DECLARE
v_id new_student.id%TYPE;
v_m1 new_student.m1%TYPE;
v_m2 new_student.m2%TYPE;
v_m3 new_student.m3%TYPE;
v_total_marks INT;
v_grade VARCHAR2(10);   
CURSOR c_student_details IS
SELECT id, m1, m2, m3
FROM new_student;
BEGIN
OPEN c_student_details;   
LOOP
FETCH c_student_details INTO v_id, v_m1, v_m2, v_m3;
EXIT WHEN c_student_details%NOTFOUND;       
v_total_marks := v_m1 + v_m2 + v_m3;     
IF v_total_marks >= 270 THEN
v_grade := 'A';
ELSIF v_total_marks >= 240 THEN
v_grade := 'B';
ELSE
v_grade := 'C';
END IF;       
UPDATE new_student SET grade = v_grade WHERE id = v_id;
END LOOP;   
CLOSE c_student_details;   
COMMIT;
END;


select * from new_student

--QUESTION 3
CREATE TABLE people_list(
ID INT PRIMARY key,
NAME VARCHAR(30),
dt_joining DATE,
place varchar(50)
);

create table exp_list(
ID INT PRIMARY KEY, 
NAME VARCHAR(30),
expreniece int
);

DECLARE
v_id people_list.ID%TYPE;
v_name people_list.NAME%TYPE;
v_dt_joining people_list.dt_joining%TYPE;
v_experience INT;
CURSOR exp_calc IS
SELECT ID,NAME,dt_joining 
FROM people_list;
BEGIN
OPEN exp_calc;
loop
fetch exp_calc INTO v_id,v_name,v_dt_joining;
exit WHEN exp_calc%notfound;
v_experience := TRUNC(MONTHS_BETWEEN(SYSDATE, v_dt_joining) / 12);



INSERT INTO people_list VALUES (1, 'John Doe','21-10-2011','CityA');
INSERT INTO people_list VALUES (2, 'Jane Smith','21-10-2012', 'CityB');
INSERT INTO people_list VALUES (3, 'Bob Johnson',  'CityC');
INSERT INTO people_list VALUES (4, 'Alice Brown', 'CityD');
INSERT INTO people_list VALUES (5, 'Charlie Wilson', , 'CityE');

TRUNCATE TABLE people_list;
DROP TABLE people_list
drop table exp_list

CREATE TABLE people_list (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(50),
    dt_joining DATE,
    place VARCHAR2(50)
);

INSERT INTO people_list VALUES (121, 'John', TO_DATE('2010-01-01', 'YYYY-MM-DD'), 'City1');
INSERT INTO people_list VALUES (221, 'Jane', TO_DATE('2015-03-15', 'YYYY-MM-DD'), 'City2');
INSERT INTO people_list VALUES (373, 'peter', TO_DATE('2009-03-15', 'YYYY-MM-DD'), 'City3');

CREATE TABLE exp_list (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(50),
    experience NUMBER
);

DECLARE
    v_id people_list.id%TYPE;
    v_name people_list.name%TYPE;
    v_dt_joining people_list.dt_joining%TYPE;
    v_experience NUMBER;
    v_cursor SYS_REFCURSOR;
BEGIN

OPEN v_cursor FOR
SELECT id, name, dt_joining
FROM people_list;

LOOP
FETCH v_cursor INTO v_id, v_name, v_dt_joining;
EXIT WHEN v_cursor%NOTFOUND;
v_experience := ROUND(MONTHS_BETWEEN(SYSDATE, v_dt_joining) / 12, 2);
IF v_experience > 10 THEN
INSERT INTO exp_list (id, name, experience) VALUES (v_id, v_name, v_experience);
END IF;
END LOOP;
CLOSE v_cursor;
END;
/
select * from exp_list



